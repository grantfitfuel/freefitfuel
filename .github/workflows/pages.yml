name: Deploy Pages (from /sites)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

        # ... your existing jobs.build.steps:
  - name: Checkout
    uses: actions/checkout@v4

  - name: Setup Node (for head injection)
    uses: actions/setup-node@v4
    with:
      node-version: '20'

  - name: Inject shared <head> snippet into every HTML in /sites
    run: |
      cat > inject-head.js <<'JS'
      const fs = require('fs');
      const path = require('path');

      const ROOT = 'sites';
      const SNIPPET_PATH = path.join(ROOT, '_head-snippet.html');
      const BEGIN = '<!-- BEGIN: HEAD-SHARED -->';
      const END   = '<!-- END: HEAD-SHARED -->';

      const snippet = fs.readFileSync(SNIPPET_PATH, 'utf8');

      function walk(dir) {
        for (const entry of fs.readdirSync(dir, { withFileTypes: true })) {
          const p = path.join(dir, entry.name);
          if (entry.isDirectory()) walk(p);
          else if (entry.isFile() && p.toLowerCase().endsWith('.html')) inject(p);
        }
      }

      function inject(file) {
        let html = fs.readFileSync(file, 'utf8');

        // Remove any previously injected block
        const beginIdx = html.indexOf(BEGIN);
        const endIdx = html.indexOf(END);
        if (beginIdx !== -1 && endIdx !== -1 && endIdx > beginIdx) {
          html = html.slice(0, beginIdx) + html.slice(endIdx + END.length);
        }

        // Find first <head ...> tag (case-insensitive)
        const headMatch = html.match(/<head[^>]*>/i);
        if (!headMatch) return; // skip files without a head tag

        const insertAt = headMatch.index + headMatch[0].length;
        const injected = html.slice(0, insertAt) + '\n' + snippet + '\n' + html.slice(insertAt);

        fs.writeFileSync(file, injected);
        console.log('Injected head snippet into', file);
      }

      walk(ROOT);
      JS

      node inject-head.js

  - name: Upload /sites as artifact
    uses: actions/upload-pages-artifact@v3
    with:
      path: "sites"

      # Upload ONLY the /sites folder as the site artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: sites

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
